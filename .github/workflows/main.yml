name: Helm-Release

on:
  push:
    branches:
      - main

jobs:
  prep:
    runs-on: self-hosted
    outputs: 
        matrix: ${{ steps.set-matrix.outputs.matrix }}
        changes: ${{ steps.changed-files-specific.outputs.any_modified }}

    steps:
      - name: Checkout source code                   # Checkout source code
        uses: 'actions/checkout@v2'
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Get specific changed files                  # To check if any files changed in charts/ansible-runner directory
        id: changed-files-specific
        uses: tj-actions/changed-files@v22.2
        with:
          path: ./charts/
          files: ./charts/**

      - name: List all changed files
        run: |
          echo "files were changed:${{ steps.changed-files-specific.outputs.any_modified }}"
          for file in ${{ steps.changed-files-specific.all_changed_and_modified_files }}; do
            echo "$file was changed"
          done

      - id: set-matrix
        if: steps.changed-files-specific.outputs.any_modified == 'true'
        run: | 
          declare var
          # for file in ${{ steps.changed-files.outputs.all_changed_and_modified_files }}; do
          #   $var="${var}\n${dirname $file | sed -E 's|/charts/(.*)|\1|'}"
          # done
          first_loop=1
          for file in ${{ steps.changed-files.outputs.all_changed_and_modified_files }}; do
            value=$(dirname $file | sed -E 's|.*/charts/(.*)|\1|')
            (( $first_loop )) &&
            var=$value ||
            var="$var\n$value"
            unset first_loop
          done
          echo "$(printf "%s" "$var" | jq -Rrsc 'split("\\n") | unique')"
          echo "::set-output name=matrix::$(printf "%s" "$var" | jq -Rrsc 'split("\\n") | unique')"
  
  release:
    needs: prep
    runs-on: self-hosted
    if: ${{ needs.prep.outputs.changes }}
    strategy:
      matrix:
        manifest: ${{ fromJson(needs.prep.outputs.matrix) }}
    steps:
      - name: Checkout source code                   # Checkout source code
        uses: 'actions/checkout@v2'
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Automated Version Bump                      # Bump version in package.json
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR: ./charts/${{ matrix.manifest}}
        with:
          skip-tag:  'true'
          commit-message: 'CI: Bump Helm chart version to {{version}}'

      - name: update Chart.yaml                              # Update chart.yaml with new version and other fields
        working-directory: charts/${{ matrix.manifest }}
        run: |
          cat <<EOF > Chart.yaml
          name: ${{ matrix.manifest }}
          apiVersion: v2
          version: ${{ steps.version-bump.outputs.newTag }}
          appVersion: ${{ steps.package-version.outputs.current-version}}
          EOF

      - name: commit the new Charts                  # commit the new Chart.yaml to main branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automated Change

      - name: Run chart-releaser                          # Publishes the helm chart to to helm registry (default is GitHub pages)
        uses: helm/chart-releaser-action@v1.4.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"